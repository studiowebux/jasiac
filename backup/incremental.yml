- name: Incremental Backup of {{ serverName }}
  hosts: physical
  gather_facts: no
  become: yes

  vars:
    backupServer: "remote.local.lab"
    backupPath: "/mnt/Backup"
    recipient: "changeme@local.lab"
    serverName: "serverName"

  tasks:
    - mount:
        state: unmounted
        path: /BACKUP

    - file:
        path: /BACKUP
        owner: root
        group: root
        state: directory
        mode: 0770

    - mount:
        boot: no
        fstype: nfs
        state: mounted
        src: "{{ backupServerÂ }}:{{ backupPath }}"
        path: /BACKUP

    - file:
        path: "/BACKUP/{{ serverName }}"
        state: directory

    - file:
        path: "/BACKUP/{{ serverName }}/VM"
        state: directory

    - shell: "echo 'Starting Backup of DATA' | mail -s 'Backup Status (DATA)' -r '{{ hostname }}<{{ recipient }}>' {{ recipient }}"

    - shell: |
        tar -czpv -g /BACKUP/{{ serverName }}/DATA-$(date +%Y-%m-%d).snar -f \
        /BACKUP/{{ serverName }}/DATA-$(date +%Y-%m-%d).tar.gz \
        --exclude '/srv/DATA/images/*' \
        --exclude '/srv/DATA/ISO/*' \
        --exclude '/srv/DATA/syslinux/*' \
        --exclude '/srv/DATA/virtual_machines/*' \
        --exclude '/srv/DATA/image_builder/*' \
        --exclude '/srv/DATA/pxe/tftpboot/*' \
        /srv/DATA/
      ignore_errors: yes

    - shell: 'echo "Backup of DATA-$(date +%Y-%m-%d).tar.gz DONE" | mail -s ''Backup Status (DATA)'' -r '{{ hostname }}<{{ recipient }}>' {{ recipient }}'

    - shell: "echo 'Starting Backup of Docker' | mail -s 'Backup Status (DOCKER)' -r '{{ hostname }}<{{ recipient }}>' {{ recipient }}"

    - shell: |
        tar -czpv -g /BACKUP/{{ serverName }}/DOCKER-$(date +%Y-%m-%d).snar -f \
        /BACKUP/{{ serverName }}/DOCKER-$(date +%Y-%m-%d).tar.gz \
        --exclude '/srv/DOCKER/data/' \
        /srv/DOCKER/
      ignore_errors: yes

    - shell: 'echo "Backup of DOCKER-$(date +%Y-%m-%d).tar.gz DONE" | mail -s ''Backup Status (DOCKER)'' -r '{{ hostname }}<{{ recipient }}>' {{ recipient }}'

    - shell: "echo 'Starting Backup of OS' | mail -s 'Backup Status (OS)' -r '{{ hostname }}<{{ recipient }}>' {{ recipient }}"

    - shell: |
        tar -czpv -g /BACKUP/{{ serverName }}/OS-$(date +%Y-%m-%d).snar -f \
        /BACKUP/{{ serverName }}/OS-$(date +%Y-%m-%d).tar.gz \
        --exclude='/dev/*' \
        --exclude='/proc/*' \
        --exclude='/sys/*' \
        --exclude='/tmp/*' \
        --exclude='/run/*' \
        --exclude='/mnt/*' \
        --exclude='/media/*' \
        --exclude='/srv/*' \
        --exclude='/BACKUP/*' \
        --exclude='/ISO/*' \
        --exclude='/tftpboot/*' \
        --exclude='/tools/*' \
        --exclude='/images/*' \
        --exclude='/storage/*' \
        --exclude='/temp/*' \
        --exclude='/lost+found' \
        /
      ignore_errors: yes

    - shell: 'echo "Backup of OS-$(date +%Y-%m-%d).tar.gz DONE" | mail -s ''Backup Status (OS)'' -r '{{ hostname }}<{{ recipient }}>' {{ recipient }}'

    - debug:
        msg: "Backup virtual machines"

    - shell: "echo 'Starting Backup of VMs' | mail -s 'Backup Status (VM)' -r '{{ hostname }}<{{ recipient }}>' {{ recipient }}"

    # virsh list
    - shell: "virsh dumpxml {{ item }} > /BACKUP/{{ serverName }}/VM/{{ item }}.xml"
      with_items:
        - OpenVAS
        - Staging
        - kali
        - Deepspeech
        - Jenkins
        - Odin
        - Production

    # find /srv/DATA/virtual_machines/ -type f -name "*.qcow2"
    - shell: find /srv/DATA/virtual_machines/ -type f -name "*.qcow2"
      register: vmpath

    - shell: |
        cp -v {{ item }} /BACKUP/{{ serverName }}/VM/$(echo {{ item }} \
        | cut -d '/' -f 4- \
        | sed -e 's|/|-|g')-$(date +%Y-%m-%d).backup.tar.gz
      # ignore_errors: yes
      with_items: "{{ vmpath.stdout_lines }}"

    - shell: "echo 'Backup of VMs DONE' | mail -s 'Backup Status (VM)' -r '{{ hostname }}<{{ recipient }}>' {{ recipient }}"

    - mount:
        state: unmounted
        path: /BACKUP
