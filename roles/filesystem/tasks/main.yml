---
# tasks file for filesystem
- fail:
    msg: "Provide a value for at least : DATA_drive"
  when: "DATA_drive == ''"

## EXTRA DRIVE
- block:
    - name: Check if the extra drive is available (No Partition), if not, notice to the user that the drive is not empty
      shell: "lsblk /dev/{{ DATA_drive }} | grep part"
      register: DATA_drive_has_partitions
      ignore_errors: true

    - pause:
        prompt: "Do you want to clear all partitions for /dev/{{ DATA_drive }} (y/N) ?"
        echo: yes
      register: prompt_status
      when: "DATA_drive_has_partitions.rc == 0 and (wipe_disks | bool) == False"

    - debug:
        msg: "The drive /dev/{{ DATA_drive }} will be use for the extra directory"
      when: "DATA_drive_has_partitions.rc == 1"

    - debug:
        msg: "{{ prompt_status }}"

    - debug:
        msg: "The partitions will be automatically cleared"
      when: "(prompt_status.user_input is defined and 'y' in prompt_status.user_input and DATA_drive_has_partitions.rc == 0) or DATA_drive_has_partitions.rc == 1 "

    - fail:
        msg: "Please choose a different drive and start the script again."
      when: "prompt_status.user_input is defined and 'y' not in prompt_status.user_input and DATA_drive_has_partitions.rc == 0"

## DOCKER DRIVE
- block:
    - name: Check if the docker drive is available (No Partition), if not, notice to the user that the drive is not empty
      shell: "lsblk /dev/{{ DOCKER_drive }} | grep part"
      register: DOCKER_drive_has_partitions
      ignore_errors: true

    - pause:
        prompt: "Do you want to clear all partitions for /dev/{{ DOCKER_drive }} (y/N) ?"
        echo: yes
      register: prompt_status
      when: "DOCKER_drive_has_partitions.rc == 0 and (wipe_disks | bool) == False"

    - debug:
        msg: "The drive /dev/{{ DOCKER_drive }} will be use for the docker directory"
      when: "DOCKER_drive_has_partitions.rc == 1"

    - debug:
        msg: "The partitions will be automatically cleared"
      when: "prompt_status.user_input is defined and 'y' in prompt_status.user_input and DOCKER_drive_has_partitions.rc == 0  or DOCKER_drive_has_partitions.rc == 1 "

    - fail:
        msg: "Please choose a different drive and start the script again."
      when: "prompt_status.user_input is defined and 'y' not in prompt_status.user_input and DOCKER_drive_has_partitions.rc == 0"
  when: "DATA_drive != DOCKER_drive"

## Check if the drive if the same for both extra and docker
- set_fact:
    drive: "/dev/{{ DATA_drive }}"
    drive1: ""
  when: "DATA_drive == DOCKER_drive"

- set_fact:
    drive: "/dev/{{ DATA_drive }}"
    drive1: "/dev/{{ DOCKER_drive }}"
  when: "DATA_drive != DOCKER_drive"

- debug:
    msg: "using {{ drive }} for /srv/extra & {{ drive1 }} for /srv/docker"

## OPERATIONS on drives
- name: unmount Drives and directories
  mount:
    path: "{{ drive }}"
    state: unmounted
  with_items:
    - "{{ drive }}1"
    - "{{ drive1 }}1"

## EXTRA DRIVE
- block:
    - name: cleaning drive
      shell: "wipefs -a {{ drive }}"
      when: '"md" not in drive' ## When not RAID wipe the filesystem

    - name: Get all partitions
      parted:
        device: "{{ drive }}"
        unit: GB
      register: sdX_info
      when: '"md" not in drive'

    - name: Remove all partitions
      parted:
        device: "{{ drive }}"
        number: "{{ item.num }}"
        state: absent
      with_items:
        - "{{ sdX_info.partitions }}"
      when: '"md" not in drive'

    - name: Create partition for {{ drive }}
      parted:
        device: "{{ drive }}"
        number: 1
        state: present
        part_end: 100%
        label: gpt
      when: '"md" not in drive'

    - name: Wait 30 seconds
      pause:
        seconds: 30
      when: '"md" not in drive'

    - name: Create filesystem for {{ drive }} when DISK
      filesystem:
        fstype: xfs
        dev: "{{ drive }}1"
        force: true
      when: '"md" not in drive'

    - name: Create filesystem for {{ drive }} when RAID device
      filesystem:
        fstype: xfs
        dev: "{{ drive }}"
        force: true
      when: '"md" in drive'

  when: "drive != ''"

## DOCKER DRIVE
- block:
    - debug:
        msg: "{{ drive1 }}"
    - name: cleaning drive
      shell: "wipefs -a {{ drive1 }}"
      when: '"md" not in drive1'

    - name: Get all partitions
      parted:
        device: "{{ drive1 }}"
        unit: GB
      register: sdX_info
      when: '"md" not in drive1'

    - name: Remove all partitions
      parted:
        device: "{{ drive1 }}"
        number: "{{ item.num }}"
        state: absent
      with_items:
        - "{{ sdX_info.partitions }}"
      when: '"md" not in drive1'

    - name: Create partition for {{ drive1 }}
      parted:
        device: "{{ drive1 }}"
        number: 1
        state: present
        part_end: 100%
        label: gpt
      when: '"md" not in drive1'

    - name: Wait 30 seconds
      pause:
        seconds: 30
      when: '"md" not in drive1'

    - name: Create filesystem for {{ drive1 }} when DISK
      filesystem:
        fstype: xfs
        dev: "{{ drive1 }}1"
        force: true
      when: '"md" not in drive1'

    - name: Create filesystem for {{ drive1 }} when RAID device
      filesystem:
        fstype: xfs
        dev: "{{ drive1 }}"
        force: true
      when: '"md" in drive1'

  when: "drive != drive1 and drive1 != ''"
