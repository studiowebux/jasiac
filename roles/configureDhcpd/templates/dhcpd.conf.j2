option space pxelinux;
option pxelinux.magic code 208 = string;
option pxelinux.configfile code 209 = text;
option pxelinux.pathprefix code 210 = text;
option pxelinux.reboottime code 211 = unsigned integer 32;
option architecture-type code 93 = unsigned integer 16;

authoritative;

ddns-updates on;
ddns-update-style standard;
update-static-leases on;
update-optimization off;
update-conflict-detection on;
use-host-decl-names on;
allow client-updates;

include "/etc/rndc.key";

allow unknown-clients;

default-lease-time 1814400; #21 days
max-lease-time 1814400; #21 days

log-facility local7;
ddns-domainname "{{ search_domain }}.";
ddns-rev-domainname "{{ interface_ipv4_revzone }}";

option domain-name "{{ search_domain }}";
option domain-search "{{ search_domain }}";
allow booting;
allow bootp;

zone {{ search_domain }}. {
    primary localhost; # This server is the primary DNS server for the zone
    key rndc-key; # Use the key we defined earlier for dynamic updates
}

zone {{ interface_ipv4_revzone }} {
    primary localhost; # This server is the primary DNS server for the zone
    key rndc-key; # Use the key we defined earlier for dynamic updates
}

subnet {{ interface_ipv4 | ipaddr('network') }} netmask {{ interface_ipv4 | ipaddr('netmask') }} {
    option domain-name-servers {{ interface_ipv4 | ipaddr('10') | ipaddr('address') }};
    option routers {{ interface_ipv4 | ipaddr('1') | ipaddr('address') }};
    range {{ interface_ipv4 | ipaddr('network/prefix') | ipaddr('51') | ipaddr('address') }} {{ interface_ipv4 | ipaddr('network/prefix') | ipaddr('-2') | ipaddr('address') }};
    option subnet-mask {{ interface_ipv4 | ipaddr('netmask') }};
    
    
    option broadcast-address {{ interface_ipv4 | ipaddr('broadcast') }};
 
    # HTTP(s) Boot Option
    class "httpclients" {
        match if substring (option vendor-class-identifier, 0, 10) = "HTTPClient";
        option vendor-class-identifier "HTTPClient";
        filename "http://{{ interface_ipv4 | ipaddr('10') | ipaddr('address') }}/ipxe/ipv4.efi";
    }
 
    class "pxeclients" {
        match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
        next-server {{ interface_ipv4 | ipaddr('10') | ipaddr('address') }};
 
        # UEFI
        if option architecture-type = 00:07 {
            option pxelinux.pathprefix "http://{{ interface_ipv4 | ipaddr('10') | ipaddr('address') }}/tftpboot/ipv4/UEFI/";
            filename "ipv4/UEFI/syslinux.efi";
        } 
        # LEGACY
        else {
            filename "ipv4/LEGACY/pxelinux.0";
        }
    }
}
